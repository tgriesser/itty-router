function e({base:t="",routes:f=[],onResponse:l}={}){return{__proto__:new Proxy({},{get:(e,a,o)=>(e,...r)=>f.push([a.toUpperCase(),RegExp(`^${(t+e).replace(/(\/?)\*/g,"($1.*)?").replace(/\/$/,"").replace(/:(\w+)(\?)?(\.)?/g,"$2(?<$1>[^/]+)$2$3").replace(/\.(?=[\w(])/,"\\.").replace(/\)\.\?\(([^\[]+)\[\^/g,"?)\\.?($1(?<=\\.)[^\\.")}/*$`),r,t+e])&&o}),routes:f,async handle(e,...r){let a,o,t=new URL(e.url);e.query=Object.fromEntries(t.searchParams);for(var[p,s,n,c]of f)if((p===e.method||"ALL"===p)&&(o=t.pathname.match(s))){e.params=o.groups,e.matched=c||"";for(var u of n)if(void 0!==(a=await u(e.proxy||e,...r)))return l?l(e,a):a}}}}export default{Router:e};export{e as Router};
